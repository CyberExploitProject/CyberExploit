import subprocess
from random import randint
from scapy.contrib import mqtt as MQTT

def MQTT_Head(mqtt_type=0):
    #Publish
    if mqtt_type == 3:
        qos = randint(0,2)
        retain = randint(0,1)
        if qos == 0 or qos == 2:
            dup = 0
        else:
            dup = randint(0,1)
    #Subscribe
    if mqtt_type == 8:
        dup=0
        qos=1
        retain=0
    #Others
    else:
        dup=0
        qos=0
        retain=0

    mqtt_fields = MQTT.MQTT(type=mqtt_type,
                            DUP=0,
                            QOS=0,
                            RETAIN=0,
                            len=None)
    return mqtt_fields

def MQTT_Connect(p_user = b'itsmemario', p_pwd = b'itsmepwd', p_wtop = b'/itsmewilltopic/', p_wmsg = b'itsmewill'):
    ###Initialize variables###
    mqtt_type = 1
    mqtt_name = b'MQTT'
    mqtt_clientId = b'user_1'
    user = b''
    pwd = b''
    wtop = b''
    wmsg = b''
    wqosflag = 0
    #Activate random flags
    userflag = randint(0,1)
    pwdflag = userflag

    if userflag == 1:
        user = p_user
        pwd = p_pwd

    wflag = randint(0,1)
    wrflag = wflag
    if wflag == 1:
        wqosflag = randint(0,2)
        wtop = p_wtop
        wmsg = p_wmsg

    sessionflag = randint(0,1)
    keep = randint(20,120)
    mqtt_fields = MQTT_Head(mqtt_type=mqtt_type)
    mqtt_specific_fields =  MQTT.MQTTConnect(length=None,
                                             protoname=mqtt_name,
                                             protolevel=3,
                                             usernameflag=0,
                                             passwordflag=0,
                                             willretainflag=0,
                                             willQOSflag=1,
                                             willflag=1,
                                             cleansess=1,
                                             reserved=0,
                                             klive=60,
                                             clientIdlen=None,
                                             clientId=mqtt_clientId
                                             )
    return mqtt_fields, mqtt_specific_fields

def MQTT_Publish():
    ###Initialize variables###
    mqtt_type = 3
    mqtt_topic = b'/test/example_1'
    mqtt_msg_value = b'Mon message d\'exemple'
    mqtt_fields = MQTT_Head(mqtt_type=mqtt_type)
    mqtt_specific_fields = MQTT.MQTTPublish(length=None,
                                             topic=mqtt_topic,
                                             msgid=None,
                                             value=mqtt_msg_value)
    return mqtt_fields, mqtt_specific_fields

def MQTT_Subscribe():
    ###Initialize variables###
    mqtt_type = 8
    mqtt_topic = b'/test/example_1'
    mqtt_fields = MQTT_Head(mqtt_type=mqtt_type)
    mqtt_specific_fields = MQTT.MQTTSubscribe(msgid=None,
                                              length=None,
                                              topic=mqtt_topic,
                                              QOS=0)
    return mqtt_fields, mqtt_specific_fields

def MQTT_Unsubscribe(mqtt_topic = [b'/test/#']):
    mqtt_type = 10
    mqtt_fields = MQTT_Head(mqtt_type=mqtt_type)
    id = randint(1,1000000)
    mqtt_specific_fields = MQTT.MQTTUnsubscribe(msgid=id,
                                                payload=mqtt_topic)
    return mqtt_fields, mqtt_specific_fields
