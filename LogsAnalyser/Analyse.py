import pandas as pd
import datetime
import sys

def eval_score(path_packet, log_folder_path):
    scena_file = open(path_packet,"r")
    scenarios = []
    packet_in_scenarios = []
    id = []
    score = []
    scenario_score = 0
    i=0
    j=0
    bolean = 0

    #SCENARIOS ANALYSIS + DataFrame creation
    for line in scena_file:
        packet_in_scenarios.append([])
        scenarios.append(line)
        for packet in scenarios[i].split("#PACKET#"):
            if packet != '\n' and packet!='':
                packet_in_scenarios[i].append(packet)

                ##PACKET ANALYSYS -> 3 PARTS, fixed_header, variable_header, payload
                flags = packet.split(":")
                fixed_h = flags[0:5]

                #CONNECT
                if j == 0 and fixed_h[0] != "1":
                    scenario_score += 1000

                if fixed_h[0] == "1":
                    variable_h = flags[5:16]
                    payload = flags[16:26]
                    # FIXED HEADER -> TYPE, DUP, QOS, RETAIN, LEN
                    if fixed_h[1] != "0" or fixed_h[2] != "0" or fixed_h[3] != "0":
                        scenario_score += 1000
                    elif fixed_h[4] != "None":
                        scenario_score += 1000

                    # VARIABLE HEADER
                    elif variable_h[0] != "None":
                        scenario_score += 1000

                    #elif variable_h[1] != "b'MQTT'" or variable_h[2] != "3":
                    elif variable_h[1] != "b'MQTT'" or variable_h[2] != "4":
                        scenario_score += 1000


                    elif variable_h[2] == "0" and fixed_h[2] in ["1","2"]:
                        scenario_score += 1000
                    elif variable_h[3] not in ["0","1"] or variable_h[4] not in ["0","1"] or variable_h[5] not in ["0","1"] or variable_h[6] not in ["0","1"] or variable_h[7] not in ["0","1","2"] or variable_h[8] not in ["0","1"]:
                        scenario_score += 1000
                    elif variable_h[4] == "1" and variable_h[3] == "0":
                        scenario_score += 1000
                    elif variable_h[5] == "0" and (variable_h[6] != "0" or variable_h[7] != "0"):
                        scenario_score += 1000
                    elif variable_h[9] != "0":
                        scenario_score += 1000


                    # PAYLOAD
                    elif payload[0] != "None" :
                        scenario_score += 1000
                    elif payload[1] == "None" or payload[1] == "b''":
                        scenario_score += 1000
                    elif (variable_h[3] == "0" and payload[7] != "b''") or (variable_h[3] == "1" and payload[7] == "b''"):
                        scenario_score += 1000
                    elif (variable_h[4] == "0" and payload[9] != "b''") or (variable_h[4] == "1" and payload[9] == "b''"):
                        scenario_score += 1000
                    elif variable_h[5] == "0" and (payload[3] != "b''" or payload[5] != "b''"):
                        scenario_score += 1000
                    elif payload[0] != "None" or payload[2] != "None" or payload[4] != "None" or payload[6] != "None" or payload[8] != "None":
                        scenario_score += 1000

                #PUBLISH
                if fixed_h[0] == "3":
                    variable_h = flags[5:8]
                    payload = flags[8]
                    # FIXED HEADER -> TYPE, DUP, QOS, RETAIN, LEN
                    if (fixed_h[2] == "0" or fixed_h[2] == "2") and fixed_h[1] != "0":
                        scenario_score += 1000
                    elif fixed_h[1] not in ["0","1"] or fixed_h[3] not in ["0","1"] or fixed_h[2] not in ["0","1","2"]:
                        scenario_score += 1000
                    elif fixed_h[4] != "None":
                        scenario_score += 1000
                    # VARIABLE HEADER -> LENGTH, TOPIC, ID
                    elif variable_h[0] != "None":
                        scenario_score += 1000
                    elif variable_h[1] == "None" or variable_h[1] == "b''":
                        scenario_score += 1000
                    elif variable_h[2] == "0" and fixed_h[2] in ["1","2"]:
                        scenario_score += 1000

                #SUBSCRIBE
                if fixed_h[0] == "8":
                    variable_h = flags[5:7]
                    payload = flags[7:9]
                    # FIXED HEADER -> TYPE, DUP, QOS, RETAIN, LEN

                    #if fixed_h[1] != "0" or fixed_h[2] != "1" or fixed_h[3] != "0": -> CELUI LA C LE JUSTE, AUTRE TESTS
                    if fixed_h[1] != "0" or fixed_h[2] != "0" or fixed_h[3] != "0":
                        scenario_score += 1000
                    elif fixed_h[4] != "None":
                        scenario_score += 1000

                    # VARIABLE HEADER -> ID, LENGHT
                    elif variable_h[1] != "None":
                        scenario_score += 1000
                    elif variable_h[0] == "0" :
                        scenario_score += 1000

                    #PAYLOAD -> TOPIC, QOS
                    elif payload[1] not in ["0","1","2"]:
                        scenario_score += 1000
                    elif payload[0] == "b''":
                        scenario_score += 1000

                #UNSUBSCRIBE
                if fixed_h[0] == "10":
                    variable_h = flags[5]
                    payload = flags[6]
                    # FIXED HEADER -> TYPE, DUP, QOS, RETAIN, LEN
                    if fixed_h[1] != "0" or fixed_h[2] != "0" or fixed_h[3] != "0":
                        scenario_score += 1000
                    elif fixed_h[4] != "None":
                        scenario_score += 1000
                    # VARIABLE HEADER -> ID
                    elif variable_h[0] == "0" :
                        scenario_score += 1000
                    #PAYLOAD -> TOPIC
                    elif payload[0] == "b''":
                        scenario_score += 1000

                #TRASH PACKETS
                if fixed_h[0] in ["2","4","5","6","7","9","11"]:
                    scenario_score += 1000

            j+=1
        id.append(i)
        score.append(scenario_score)
        i+=1
        j=0
        scenario_score = 0

    data = {'ID': id, 'scenarios': packet_in_scenarios, 'score': score}
    df = pd.DataFrame(data)


    #LOGS ANALYSIS, the context analysis for the logs is missing
    test_publish = 0
    test_subscribe = 0
    test_unsub = 0
    test_connect = 0
    test_disco = 0
    for i in range(0,len(df)):
        log = open(log_folder_path+"/"+str(i)+".log","r")
        times = []
        for line in log:
            line_memory = line.split()
            for k in range(0,len(line.split())):

                if line_memory[k] == 'error':
                    df.at[i,'score'] -= 1000

                if line_memory[k] == 'connection':
                     if line_memory[k-1] == 'New':
                        test_connect += 1
                if line_memory[k] == 'connected':
                     if line_memory[k-1] == 'client':
                        test_connect += 1
                if line_memory[k] == 'CONNACK':
                    test_connect += 1

                if line_memory[k] == 'UNSUBSCRIBE':
                    test_unsub += 1
                if line_memory[k] == 'UNSUBACK':
                    test_unsub -= 1

                if line_memory[k] == 'SUBSCRIBE':
                    test_subscribe += 1
                if line_memory[k] == 'SUBACK':
                    test_subscribe -= 1

                if line_memory[k] == 'Sending':
                    if line_memory[k+1] == 'PUBLISH':
                        test_publish = test_publish + 1
                if line_memory[k] == 'Received':
                    if line_memory[k+1] == 'PUBLISH':
                        test_publish -= 1

            time_str = line.split(": ")[0].split("T")[1]
            times.append(datetime.datetime.strptime(time_str, '%H:%M:%S'))

        for word in line:
            if word == 'Received':
                test_disco += 1
            if word == 'DISCONNECT':
                test_disco -= 1
        if test_publish != 0 or test_subscribe != 0 or test_unsub != 0 or test_disco != 0 or test_connect != 3:
            df.at[i,'score'] -= 200*(abs(test_publish)+abs(test_subscribe)+abs(test_connect)+abs(test_unsub))+500*abs(test_disco)
        test_publish = 0
        test_subscribe = 0
        test_connect = 0
        test_disco = 0
        dtime = (times[-1] - times[0]).total_seconds()
        df.at[i,'score'] = abs(df.at[i,'score'])
        df.at[i,'score'] += int(dtime)*5
    return df



###Main
if len(sys.argv) != 3 :
    print("Incorrect number of parameters !")
    print("Usage:  # python3 docker-compose.py  <path to scenarios file>  <path to logs folder>")

else:
    df = eval_score(sys.argv[1], sys.argv[2])

    df.to_csv('logs_scores.csv')

    df.to_excel("logs_scores.xlsx")
